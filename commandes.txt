FONCTION 1 :
faas-cli template store pull python3-http
faas-cli new generate-password-qrcode --lang python3-http
docker run --name cofrap-postgres `
  -e POSTGRES_USER=postgres `
  -e POSTGRES_PASSWORD=postgres `
  -e POSTGRES_DB=cofrap `
  -p 5432:5432 `
  -d postgres
docker ps
faas-cli build -f stack.yaml
faas-cli deploy -f stack.yaml
echo '{"username":"juliette"}' | faas-cli invoke generate-password

Comme j'ai eu des soucis au moment d'exécuter l'avant dernière commande :
minikube start --driver=docker
kubectl get nodes
kubectl create namespace openfaas
kubectl create namespace openfaas-fn
kubectl apply -f https://raw.githubusercontent.com/openfaas/faas-netes/master/namespaces.yml
kubectl apply -f https://raw.githubusercontent.com/openfaas/faas-netes/master/openfaas.yaml
kubectl rollout status -n openfaas deploy/gateway
helm repo add openfaas https://openfaas.github.io/faas-netes/
helm repo update
helm install openfaas openfaas/openfaas --namespace openfaas --set functionNamespace=openfaas-fn --set generateBasicAuth=true
helm upgrade openfaas openfaas/openfaas --namespace openfaas --set functionNamespace=openfaas-fn --set generateBasicAuth=true
kubectl get pods -n openfaas
kubectl port-forward -n openfaas svc/gateway 8080:8080
$PASSWORD = kubectl -n openfaas get secret basic-auth -o jsonpath="{.data.basic-auth-password}" | %{ [System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String($_)) }
Write-Output $PASSWORD
LE MOT DE PASSE SERT A SE CONNECTER SUR L'URL CI DESSOUS
faas-cli login --gateway http://127.0.0.1:8080 --username admin --password $PASSWORD
faas-cli deploy -f stack.yaml --gateway http://127.0.0.1:8080

J'ai aussi déployé l'image en public sur DockerHub :
faas-cli build -f stack.yaml
docker login
faas-cli push -f stack.yaml
faas-cli deploy -f stack.yaml --gateway http://127.0.0.1:8080
echo '{"username":"juliette"}' | faas-cli invoke generate-password --gateway http://127.0.0.1:8080

REFONTE FONCTION 1 :
minikube start
cd generate-password
kubectl port-forward -n openfaas svc/gateway 8080:8080
faas-cli new generate-password --lang python3-http
faas-cli build -f stack.yaml
faas-cli push -f stack.yaml
faas-cli deploy -f stack.yaml --gateway http://127.0.0.1:8080
echo '{"username":"juliette"}' | faas-cli invoke generate-password --gateway http://127.0.0.1:8080

Pour la base de données :
helm repo add bitnami https://charts.bitnami.com/bitnami
helm install cofrap-db bitnami/postgresql
$base64 = kubectl get secret cofrap-db-postgresql -o jsonpath="{.data.postgres-password}"
$POSTGRES_PASSWORD = [System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String($base64))
Write-Output $POSTGRES_PASSWORD
kubectl port-forward svc/cofrap-db-postgresql 5432:5432

FONCTION 2 :
faas-cli new generate-2fa --lang python3-http
faas-cli build -f stack.yaml
faas-cli push -f stack.yaml
faas-cli deploy -f stack.yaml --gateway http://127.0.0.1:8080